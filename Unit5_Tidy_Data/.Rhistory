DT = do.call(rbind, lapply(files, fread)
# the same using `rbindlist()`
DT = rbindlist(lapply(files, fread)))
library(readr)
library(dplyr)
tbl = lapply(files, read_csv) %>% bind_rows()
tbl
tbl = lapply(files, read_csv, header=FALSE) %>% bind_rows()
df <- read.table("yob2016.txt", header = FALSE, sep = ";", strip.white = TRUE)
colnames(df)[colnames(df)=='V1'] <- 'Name'
colnames(df)[colnames(df)=='V2'] <- 'Gender'
colnames(df)[colnames(df)=='V3'] <- 'Count_of_Name'
class(df)
propmiss <- function(dataframe) {
m <- sapply(dataframe, function(x) {
data.frame(
na_count=sum(is.na(x)),
Obs=length(x),
perc_missing=sum(is.na(x))/length(x)*100
)
})
d <- data.frame(t(m))
d <- sapply(d, unlist)
d <- as.data.frame(d)
d$variable <- row.names(d)
row.names(d) <- NULL
d <- cbind(d[ncol(d)],d[-ncol(d)])
return(d[order(d$na_count, decreasing=TRUE), ])
}
propmiss(df)
dim(df)
summary(df)
df <- read.table("yob2016.txt", header = FALSE, sep = ";", strip.white = TRUE)
colnames(df)[colnames(df)=='V1'] <- 'Name'
colnames(df)[colnames(df)=='V2'] <- 'Gender'
colnames(df)[colnames(df)=='V3'] <- 'Count_of_Name'
class(df)
df <- read.table("yob2016.txt", header = FALSE, sep = ";", strip.white = TRUE)
colnames(df)[colnames(df)=='V1'] <- 'Name'
colnames(df)[colnames(df)=='V2'] <- 'Gender'
colnames(df)[colnames(df)=='V3'] <- 'Count_of_Name'
class(df)
setwd("~/SMU/MSDS_6306_Doing_Data_Science/HW_Data/Unit5_Tidy_Data")
df <- read.table("yob2016.txt", header = FALSE, sep = ";", strip.white = TRUE)
colnames(df)[colnames(df)=='V1'] <- 'Name'
colnames(df)[colnames(df)=='V2'] <- 'Gender'
colnames(df)[colnames(df)=='V3'] <- 'Count_of_Name'
class(df)
propmiss <- function(dataframe) {
m <- sapply(dataframe, function(x) {
data.frame(
na_count=sum(is.na(x)),
Obs=length(x),
perc_missing=sum(is.na(x))/length(x)*100
)
})
d <- data.frame(t(m))
d <- sapply(d, unlist)
d <- as.data.frame(d)
d$variable <- row.names(d)
row.names(d) <- NULL
d <- cbind(d[ncol(d)],d[-ncol(d)])
return(d[order(d$na_count, decreasing=TRUE), ])
}
#Show dimensions
propmiss(df)
dim(df)
summary(df)
Major_Count <- as.data.frame(df %>% group_by(Name) %>% summarize(count=n()))
Major_Count <- Major_Count[complete.cases(Major_Count),]
Major_Count <- Major_Count[order(Name$Count_of_Name,decreasing=TRUE),c(1,2)]
Major_Count
#Show dimensions
propmiss(df)
Major_Count <- as.data.frame(df %>% group_by(Name) %>% summarize(count=n()))
Major_Count <- Major_Count[complete.cases(Major_Count),]
Major_Count <- Major_Count[order(df$Count_of_Name,decreasing=TRUE),c(1,2)]
Major_Count
grepl("Aabha", df$Name)
grep('Lyndee', df$Name)
grep('Lyndee', df$Name)
#Show dimensions
propmiss(df)
df
head(df,6)
df[grep("Mia",df)]
state.name[grep("New", state.name)]
class(df)
class(state.name)
library(data.table)
mtcars[rownames(mtcars) %like% "Merc", ]
iris[iris$Species %like% "osa", ]
library(data.table)
mtcars[rownames(mtcars) %like% "Merc", ]
df[rownames(df) %like% "Mia", ]
library(data.table)
df[rownames(df) %like% "Mia", ]
head(df,10)
head(mtcars)
df[colnames(df) %like% "Mia", ]
install.packages("sqldf")
library(sqldf)
sqldf("Select * FROM df LIMIT 6;")
sqldf("Select *
FROM df
WHERE Name like '%ia LIMIT 6;")
sqldf("Select *
FROM df
WHERE Name like '%ia' LIMIT 6;")
sqldf("Select *
FROM df
WHERE Name like '%yyy' LIMIT 6;")
sqldf("Select *
FROM df
WHERE Name like '%YYY';")
sqldf("Select *
FROM df
WHERE Name like 'Fiona%';")
#find duplicated names
sqldf("Select *
FROM df
WHERE Name like '%yyy';")
sqldf("Select *
FROM df
WHERE Name like '%yyy';")
sqldf("Delete
FROM df
WHERE Name like '%yyy';")
dim(df)
df <- read.table("yob2016.txt", header = FALSE, sep = ";", strip.white = TRUE)
colnames(df)[colnames(df)=='V1'] <- 'Name'
colnames(df)[colnames(df)=='V2'] <- 'Gender'
colnames(df)[colnames(df)=='V3'] <- 'Count_of_Name'
dim(df)
sqldf("Delete FROM df WHERE Name like '%yyy';")
sqldf("Select *
FROM df
WHERE Name like '%yyy';")
sqldf("Delete FROM df WHERE Name = 'Fionayyy';")
#Show dimensions
propmiss(df)
library(RSQLite)
library(DBI)
library(gsubfn)
library(proto)
sqldf("Delete FROM df WHERE Name = 'Fionayyy';")
dftest<-df[!(df$Name=="Fionayyy"),]
dim(dftest)
dim(df)
dupname <- sqldf("Select *
FROM df
WHERE Name like '%yyy';")
dupname
#Read in the yob2016.txt data set
df <- read.table("yob2016.txt", header = FALSE, sep = ";", strip.white = TRUE)
colnames(df)[colnames(df)=='V1'] <- 'Name'
colnames(df)[colnames(df)=='V2'] <- 'Gender'
colnames(df)[colnames(df)=='V3'] <- 'Count_of_Name'
y2016 <- df[!(df$Name=="Fionayyy"),]
dim(y2016)
sqldf("Select *
FROM y2016
WHERE Name like '%yyy';")
sqldf("Select *
FROM y2016
WHERE Name like 'Fiona%';")
y2015 <- read.table("yob2015.txt", header = FALSE, sep = ",", strip.white = TRUE)
colnames(df)[colnames(df)=='V1'] <- 'Name'
colnames(df)[colnames(df)=='V2'] <- 'Gender'
colnames(df)[colnames(df)=='V3'] <- 'Count_of_Name'
head(y2015)
y2015 <- read.table("yob2015.txt", header = FALSE, sep = ",", strip.white = TRUE)
colnames(y2015)[colnames(y2015)=='V1'] <- 'Name'
colnames(y2015)[colnames(y2015)=='V2'] <- 'Gender'
colnames(y2015)[colnames(y2015)=='V3'] <- 'Count_of_Name'
head(y2015)
df <- read.table("yob2016.txt", header = FALSE, sep = ";", strip.white = TRUE)
colnames(df)[colnames(df)=='V1'] <- 'Name'
colnames(df)[colnames(df)=='V2'] <- 'Gender'
colnames(df)[colnames(df)=='V3'] <- 'Count_of_Name'
y2016 <- df[!(df$Name=="Fionayyy"),]
dim(y2016)
tail(y2015,10)
tail(y2015,15)
tail(y2015,20)
tail(y2015,10)
tail(y2016,10)
dim(y2015)
dim(y2016)
?merge
final <- merge(y2015, y2016, by="Name", all=FALSE)
final
final <- merge(y2015, y2016, by.x=c("Name","Gender"), by.y=c("Name","Gender"), all=FALSE)
dim(final)
head(final)
colnames(y2015)[colnames(y2015)=='Count_of_Name.x'] <- 'Count_of_Name_2015'
colnames(y2015)[colnames(y2015)=='Count_of_Name.y'] <- 'Count_of_Name_2016'
head(final)
colnames(final)[colnames(final)=='Count_of_Name.x'] <- 'Count_of_Name_2015'
colnames(final)[colnames(final)=='Count_of_Name.y'] <- 'Count_of_Name_2016'
head(final)
dim(final)
sqldf("Select
Name,
Gender,
Count_of_Name_2015,
Count_of_Name_2016
FROM final;")
sqldf("Select
Name,
Gender,
Count_of_Name_2015,
Count_of_Name_2016,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final;")
final <- sqldf("Select
Name,
Gender,
Count_of_Name_2015,
Count_of_Name_2016,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final;")
class(final)
final <- sqldf("Select
Name,
Gender,
Count_of_Name_2015,
Count_of_Name_2016,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final
ORDER by 5;")
final
final <- sqldf("Select
Name,
Gender,
Count_of_Name_2015,
Count_of_Name_2016,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final
ORDER by Total;")
final
final <- sqldf("Select
Name,
Gender,
Count_of_Name_2015,
Count_of_Name_2016,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final
ORDER by Total desc;")
final
sqldf("Select
Name,
Gender,
Count_of_Name_2015,
Count_of_Name_2016,
SUM(Count_of_Name_2015+Count_of_Name_2016) as Total
FROM final
ORDER by Total desc;")
sqldf("Select
SUM(Count_of_Name_2015+Count_of_Name_2016) as TotalCountofNames
FROM final
ORDER by Total desc;")
sqldf("Select
SUM(Count_of_Name_2015+Count_of_Name_2016) as TotalCountofNames
FROM final;")
#Report sum total names
sqldf("Select SUM(Count_of_Name_2015+Count_of_Name_2016) as TotalCountofNames FROM final;")
####################################
######        3b
######   Sort final
######   Show top 10 names
######
####################################
head(final, 10)
sqldf("Select
Name,
Gender,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final
WHERE Gender = 'F'
ORDER by Total desc limit 10;")
final_Top10_female_names <- sqldf("Select
Name,
Gender,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final
WHERE Gender = 'F'
ORDER by Total desc limit 10;")
final_Top10_female_names
final_Top10_female_names <- sqldf("Select
Name,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final
WHERE Gender = 'F'
ORDER by Total desc limit 10;")
final_Top10_female_names
getwd()
write.csv(final_Top10_female_names, file="Top_10_Popular_Female_Names.csv")
write.csv(final_Top10_female_names, file="Top_10_Popular_Female_Names.csv", row.names = FALSE)
library(data.table)
library(sqldf)
library(RSQLite)
library(DBI)
library(gsubfn)
library(proto)
####################################
######        1a
######   Read yob2016.txt
######   Add column names
####################################
#Read in the yob2016.txt data set
df <- read.table("yob2016.txt", header = FALSE, sep = ";", strip.white = TRUE)
colnames(df)[colnames(df)=='V1'] <- 'Name'
colnames(df)[colnames(df)=='V2'] <- 'Gender'
colnames(df)[colnames(df)=='V3'] <- 'Count_of_Name'
####################################
######        1b
######   Display summary
######   & Struture df
####################################
#Get dimensions of table
#Show dimensions
dim(df)
class(df)
summary(df)
#find misspelled names
sqldf("Select *
FROM df
WHERE Name like '%yyy';")
y2016 <- df[!(df$Name=="Fionayyy"),]
dim(df)
dim(y2016)
y2015 <- read.table("yob2015.txt", header = FALSE, sep = ",", strip.white = TRUE)
colnames(y2015)[colnames(y2015)=='V1'] <- 'Name'
colnames(y2015)[colnames(y2015)=='V2'] <- 'Gender'
colnames(y2015)[colnames(y2015)=='V3'] <- 'Count_of_Name'
head(y2015, 2)
tail(y2015,10)
#merge data frames on name and gender
final <- merge(y2015, y2016, by.x=c("Name","Gender"), by.y=c("Name","Gender"), all=FALSE)
#rename column names
colnames(final)[colnames(final)=='Count_of_Name.x'] <- 'Count_of_Name_2015'
colnames(final)[colnames(final)=='Count_of_Name.y'] <- 'Count_of_Name_2016'
head(final, 2)
#Add the counts and creates Total column
#sorts by Total in descending order
final <- sqldf("Select
Name,
Gender,
Count_of_Name_2015,
Count_of_Name_2016,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final
ORDER by Total desc;")
#Report sum total names
sqldf("Select SUM(Count_of_Name_2015+Count_of_Name_2016) as TotalCountofNames FROM final;")
#show top 10 results
head(final, 10)
####################################
######        3c
######   Sort final
######   Show top 10 female names
######
####################################
final_Top10_female_names <- sqldf("Select
Name,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final
WHERE Gender = 'F'
ORDER by Total desc limit 10;")
final_Top10_female_names
knitr::opts_chunk$set(echo = TRUE)
#find misspelled names
sqldf("Select *
FROM df
WHERE Name like '%yyy';")
misspelled_name
misspelled_name <- sqldf("Select *
FROM df
WHERE Name like '%yyy';")
misspelled_name
#find misspelled names
misspelled_name <- sqldf("Select *
FROM df
WHERE Name like '%yyy';")
misspelled_name
library(data.table)
library(sqldf)
library(RSQLite)
library(DBI)
library(gsubfn)
library(proto)
misspelled_name <- sqldf("Select *
FROM df
WHERE Name like '%yyy';")
misspelled_name
library(data.table)
library(sqldf)
library(RSQLite)
library(DBI)
library(gsubfn)
library(proto)
####################################
######        1a
######   Read yob2016.txt
######   Add column names
####################################
#Read in the yob2016.txt data set
df <- read.table("yob2016.txt", header = FALSE, sep = ";", strip.white = TRUE)
colnames(df)[colnames(df)=='V1'] <- 'Name'
colnames(df)[colnames(df)=='V2'] <- 'Gender'
colnames(df)[colnames(df)=='V3'] <- 'Count_of_Name'
####################################
######        1b
######   Display summary
######   & Struture df
####################################
#Get dimensions of table
#Show dimensions
dim(df)
class(df)
summary(df)
####################################
######        1c
######   Find misspelled Name
######       %yyy
####################################
#find misspelled names
sqldf("Select *
FROM df
WHERE Name like '%yyy';")
####################################
######        1d
######   Remove Fionayyy
######       from df
####################################
y2016 <- df[!(df$Name=="Fionayyy"),]
dim(df)
dim(y2016)
####################################
######        2a
######   Read yob2015.txt
######   Add column names
####################################
y2015 <- read.table("yob2015.txt", header = FALSE, sep = ",", strip.white = TRUE)
colnames(y2015)[colnames(y2015)=='V1'] <- 'Name'
colnames(y2015)[colnames(y2015)=='V2'] <- 'Gender'
colnames(y2015)[colnames(y2015)=='V3'] <- 'Count_of_Name'
head(y2015, 2)
####################################
######        2b
######   Show last 10 rows
######   Describe observations
####################################
tail(y2015,10)
#They are all males and have 5 obs each
####################################
######        2c
######   Merge y2015 & y2016
######
####################################
#merge data frames on name and gender
final <- merge(y2015, y2016, by.x=c("Name","Gender"), by.y=c("Name","Gender"), all=FALSE)
#rename column names
colnames(final)[colnames(final)=='Count_of_Name.x'] <- 'Count_of_Name_2015'
colnames(final)[colnames(final)=='Count_of_Name.y'] <- 'Count_of_Name_2016'
head(final, 2)
####################################
######        3a
######   Add total column
######   Add y2015 and y2016
######     Report sum of counts
####################################
#Add the counts and creates Total column
#sorts by Total in descending order
final <- sqldf("Select
Name,
Gender,
Count_of_Name_2015,
Count_of_Name_2016,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final
ORDER by Total desc;")
#Report sum total names
sqldf("Select SUM(Count_of_Name_2015+Count_of_Name_2016) as TotalCountofNames FROM final;")
####################################
######        3b
######   Sort final
######   Show top 10 names
######
####################################
#show top 10 results
head(final, 10)
####################################
######        3c
######   Sort final
######   Show top 10 female names
######
####################################
final_Top10_female_names <- sqldf("Select
Name,
Count_of_Name_2015+Count_of_Name_2016 as Total
FROM final
WHERE Gender = 'F'
ORDER by Total desc limit 10;")
final_Top10_female_names
####################################
######        3d
######   Write top 10 femal names
######        to CSV
######
####################################
