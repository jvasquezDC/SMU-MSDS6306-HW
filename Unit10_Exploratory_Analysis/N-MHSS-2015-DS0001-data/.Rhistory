when LST = 'AE' then 'NonMainland'
when LST = 'AA' then 'NonMainland'
when LST = 'AP' then 'NonMainland'
else 'Mainland'
END AS 'StateType'
FROM mh2015_puf")
#count of medical centers by state
mh2015_puf_Mainland <- sqldf("select LST as StateAbrev, count(*) as CountOfCenters
from mh2015_puf
WHERE StateType = 'Mainland'
group by LST
Order by 1 desc")
mh2015_puf_Mainland <- merge(mh2015_puf_Mainland, StateDB, by=("StateAbrev"))
dim(mh2015_puf_Mainland)
head(mh2015_puf_Mainland)
class(mh2015_puf_Mainland)
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
library(ggplot2)
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters)) +
geom_bar(stat="identity")+
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName
theme(legend.title = element_blank()))) +
geom_bar(stat="identity")+
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName,
theme(legend.title = element_blank()))) +
geom_bar(stat="identity")+
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
theme(legend.title=element_blank())+
geom_bar(stat="identity")+
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
theme(legend.title=element_blank())
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
theme(legend.position="bottom") +
theme(legend.title=element_blank())+
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
theme(legend.position="bottom") +
theme(legend.title=element_blank())
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
theme(legend.position="none") +
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
theme(legend.position="none") +
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
theme(legend.position="none") +
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
theme(legend.position="none") +
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
theme(plot.title=element_text( hjust=1, vjust=0.5, face='bold'))
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
theme(legend.position="none",
plot.title=element_text( hjust=1, vjust=0.5, face='bold')) +
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
theme(legend.position="none",
plot.title=element_text(hjust=1)) +
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
theme(legend.position="none",
plot.title=element_text(hjust=0.5)) +
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters),
y=CountOfCenters,
fill=StateName)) +
geom_bar(stat="identity")+
theme(legend.position="none",   #Remove the legend
plot.title=element_text(hjust=0.5)) +  #center the title
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of Medical Center by State")
state.division
state.area
##############################################
#####                          ###############
#####                          ###############
#####    Make State DB         ###############
#####                          ###############
##############################################
#Create State DB data frame
StateDB <- data.frame(state.name, state.abb, state.area, state.region)
colnames(StateDB)[colnames(StateDB)=='state.name'] <- 'StateName'
colnames(StateDB)[colnames(StateDB)=='state.abb'] <- 'StateAbrev'
colnames(StateDB)[colnames(StateDB)=='state.area'] <- 'StateSize'
colnames(StateDB)[colnames(StateDB)=='state.region'] <- 'StateRegion'
#Add district of Columbia to StateDB Data Frame
DistrictColumbia <- data.frame("District of Columbia","DC")
names(DistrictColumbia) <- c("StateName","StateAbrev")
StateDB <- rbind(StateDB, DistrictColumbia)
#Trim Function to remove leading and trailing white spacing
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
mh2015_puf$LST <- trim(mh2015_puf$LST)
#######################################################
####
####   B. list unique state names from column LST
####
#######################################################
#List unique state abbrevations order by State Abrev.
sqldf("Select distinct LST
FROM mh2015_puf
order by 1")
#######################################################
####
####   C. Filter data to only rows that are Mainland
####
#######################################################
sqldf("select LST, count(*) as Count
from mh2015_puf
group by LST
Order by 1")
#adding a mainland vs non-mainland column
mh2015_puf <- sqldf("SELECT *,
case
when LST = 'AK' then 'NonMainland'
when LST = 'PR' then 'NonMainland'
when LST = 'HI' then 'NonMainland'
when LST = 'AS' then 'NonMainland'
when LST = 'FM' then 'NonMainland'
when LST = 'GU' then 'NonMainland'
when LST = 'MH' then 'NonMainland'
when LST = 'MP' then 'NonMainland'
when LST = 'PW' then 'NonMainland'
when LST = 'VI' then 'NonMainland'
when LST = 'AE' then 'NonMainland'
when LST = 'AA' then 'NonMainland'
when LST = 'AP' then 'NonMainland'
else 'Mainland'
END AS 'StateType'
FROM mh2015_puf")
#count of medical centers by state
mh2015_puf_Mainland <- sqldf("select LST as StateAbrev, count(*) as CountOfCenters
from mh2015_puf
WHERE StateType = 'Mainland'
group by LST
Order by 1 desc")
#Add full State Name
mh2015_puf_Mainland <- merge(mh2015_puf_Mainland, StateDB, by=("StateAbrev"))
#Show top 6 rows
head(mh2015_puf_Mainland)
load("~/SMU/MSDS_6306_Doing_Data_Science/HW_Data/SMU-MSDS6306-HW/Unit10_Exploratory_Analysis/N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda")
load("~/SMU/MSDS_6306_Doing_Data_Science/HW_Data/SMU-MSDS6306-HW/Unit10_Exploratory_Analysis/N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda")
#Create State DB data frame
StateDB <- data.frame(state.name, state.abb, state.area, state.region)
colnames(StateDB)[colnames(StateDB)=='state.name'] <- 'StateName'
colnames(StateDB)[colnames(StateDB)=='state.abb'] <- 'StateAbrev'
colnames(StateDB)[colnames(StateDB)=='state.area'] <- 'StateSize'
colnames(StateDB)[colnames(StateDB)=='state.region'] <- 'StateRegion'
#Add district of Columbia to StateDB Data Frame
DistrictColumbia <- data.frame("District of Columbia","DC")
names(DistrictColumbia) <- c("StateName","StateAbrev")
StateDB <- rbind(StateDB, DistrictColumbia)
#Trim Function to remove leading and trailing white spacing
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
mh2015_puf$LST <- trim(mh2015_puf$LST)
#######################################################
####
####   B. list unique state names from column LST
####
#######################################################
#List unique state abbrevations order by State Abrev.
sqldf("Select distinct LST
FROM mh2015_puf
order by 1")
#######################################################
####
####   C. Filter data to only rows that are Mainland
####
#######################################################
sqldf("select LST, count(*) as Count
from mh2015_puf
group by LST
Order by 1")
#adding a mainland vs non-mainland column
mh2015_puf <- sqldf("SELECT *,
case
when LST = 'AK' then 'NonMainland'
when LST = 'PR' then 'NonMainland'
when LST = 'HI' then 'NonMainland'
when LST = 'AS' then 'NonMainland'
when LST = 'FM' then 'NonMainland'
when LST = 'GU' then 'NonMainland'
when LST = 'MH' then 'NonMainland'
when LST = 'MP' then 'NonMainland'
when LST = 'PW' then 'NonMainland'
when LST = 'VI' then 'NonMainland'
when LST = 'AE' then 'NonMainland'
when LST = 'AA' then 'NonMainland'
when LST = 'AP' then 'NonMainland'
else 'Mainland'
END AS 'StateType'
FROM mh2015_puf")
#count of medical centers by state
mh2015_puf_Mainland <- sqldf("select LST as StateAbrev, count(*) as CountOfCenters
from mh2015_puf
WHERE StateType = 'Mainland'
group by LST
Order by 1 desc")
#Add full State Name
mh2015_puf_Mainland <- merge(mh2015_puf_Mainland, StateDB, by=("StateAbrev"))
#Show top 6 rows
head(mh2015_puf_Mainland)
#Create bar plot of total medical centers by state
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters), #order the bars by value
y=CountOfCenters,
fill=StateName)) +  #color the bars by state name
geom_bar(stat="identity")+
theme(legend.position="none",   #Remove the legend
plot.title=element_text(hjust=0.5)) +  #center the title
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of VA Medical Centers by State")
load("~/SMU/MSDS_6306_Doing_Data_Science/HW_Data/SMU-MSDS6306-HW/Unit10_Exploratory_Analysis/N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda")
StateDB <- data.frame(state.name, state.abb, state.area, state.region)
colnames(StateDB)[colnames(StateDB)=='state.name'] <- 'StateName'
colnames(StateDB)[colnames(StateDB)=='state.abb'] <- 'StateAbrev'
colnames(StateDB)[colnames(StateDB)=='state.area'] <- 'StateSize'
colnames(StateDB)[colnames(StateDB)=='state.region'] <- 'StateRegion'
#Add district of Columbia to StateDB Data Frame
DistrictColumbia <- data.frame("District of Columbia","DC", "43737.6", "South")
names(DistrictColumbia) <- c("StateName","StateAbrev", "StateSize", "StateRegion")
StateDB <- rbind(StateDB, DistrictColumbia)
#Trim Function to remove leading and trailing white spacing
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
mh2015_puf$LST <- trim(mh2015_puf$LST)
#######################################################
####
####   B. list unique state names from column LST
####
#######################################################
#List unique state abbrevations order by State Abrev.
sqldf("Select distinct LST
FROM mh2015_puf
order by 1")
#######################################################
####
####   C. Filter data to only rows that are Mainland
####
#######################################################
sqldf("select LST, count(*) as Count
from mh2015_puf
group by LST
Order by 1")
#adding a mainland vs non-mainland column
mh2015_puf <- sqldf("SELECT *,
case
when LST = 'AK' then 'NonMainland'
when LST = 'PR' then 'NonMainland'
when LST = 'HI' then 'NonMainland'
when LST = 'AS' then 'NonMainland'
when LST = 'FM' then 'NonMainland'
when LST = 'GU' then 'NonMainland'
when LST = 'MH' then 'NonMainland'
when LST = 'MP' then 'NonMainland'
when LST = 'PW' then 'NonMainland'
when LST = 'VI' then 'NonMainland'
when LST = 'AE' then 'NonMainland'
when LST = 'AA' then 'NonMainland'
when LST = 'AP' then 'NonMainland'
else 'Mainland'
END AS 'StateType'
FROM mh2015_puf")
#count of medical centers by state
mh2015_puf_Mainland <- sqldf("select LST as StateAbrev, count(*) as CountOfCenters
from mh2015_puf
WHERE StateType = 'Mainland'
group by LST
Order by 1 desc")
#Add full State Name
mh2015_puf_Mainland <- merge(mh2015_puf_Mainland, StateDB, by=("StateAbrev"))
#Show top 6 rows
head(mh2015_puf_Mainland)
#######################################################
####
####   D. Create bar chart
####
#######################################################
#Create bar plot of total medical centers by state
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters), #order the bars by value
y=CountOfCenters,
fill=StateName)) +  #color the bars by state name
geom_bar(stat="identity")+
theme(legend.position="none",   #Remove the legend
plot.title=element_text(hjust=0.5)) +  #center the title
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of VA Medical Centers by State")
#Show top 6 rows
head(mh2015_puf_Mainland)
#Create State DB data frame
StateDB <- data.frame(state.name, state.abb, state.area, state.region)
colnames(StateDB)[colnames(StateDB)=='state.name'] <- 'StateName'
colnames(StateDB)[colnames(StateDB)=='state.abb'] <- 'StateAbrev'
colnames(StateDB)[colnames(StateDB)=='state.area'] <- 'StateSize'
colnames(StateDB)[colnames(StateDB)=='state.region'] <- 'StateRegion'
#Add district of Columbia to StateDB Data Frame
DistrictColumbia <- data.frame("District of Columbia","DC", "68.34", "South")
names(DistrictColumbia) <- c("StateName","StateAbrev", "StateSize", "StateRegion")
StateDB <- rbind(StateDB, DistrictColumbia)
#Trim Function to remove leading and trailing white spacing
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
mh2015_puf$LST <- trim(mh2015_puf$LST)
#######################################################
####
####   B. list unique state names from column LST
####
#######################################################
#List unique state abbrevations order by State Abrev.
sqldf("Select distinct LST
FROM mh2015_puf
order by 1")
#######################################################
####
####   C. Filter data to only rows that are Mainland
####
#######################################################
sqldf("select LST, count(*) as Count
from mh2015_puf
group by LST
Order by 1")
#adding a mainland vs non-mainland column
mh2015_puf <- sqldf("SELECT *,
case
when LST = 'AK' then 'NonMainland'
when LST = 'PR' then 'NonMainland'
when LST = 'HI' then 'NonMainland'
when LST = 'AS' then 'NonMainland'
when LST = 'FM' then 'NonMainland'
when LST = 'GU' then 'NonMainland'
when LST = 'MH' then 'NonMainland'
when LST = 'MP' then 'NonMainland'
when LST = 'PW' then 'NonMainland'
when LST = 'VI' then 'NonMainland'
when LST = 'AE' then 'NonMainland'
when LST = 'AA' then 'NonMainland'
when LST = 'AP' then 'NonMainland'
else 'Mainland'
END AS 'StateType'
FROM mh2015_puf")
#count of medical centers by state
mh2015_puf_Mainland <- sqldf("select LST as StateAbrev, count(*) as CountOfCenters
from mh2015_puf
WHERE StateType = 'Mainland'
group by LST
Order by 1 desc")
#Add full State Name
mh2015_puf_Mainland <- merge(mh2015_puf_Mainland, StateDB, by=("StateAbrev"))
#Show top 6 rows
head(mh2015_puf_Mainland)
#######################################################
####
####   D. Create bar chart
####
#######################################################
#Create bar plot of total medical centers by state
ggplot(data=mh2015_puf_Mainland,
aes(x=reorder(StateName, CountOfCenters), #order the bars by value
y=CountOfCenters,
fill=StateName)) +  #color the bars by state name
geom_bar(stat="identity")+
theme(legend.position="none",   #Remove the legend
plot.title=element_text(hjust=0.5)) +  #center the title
coord_flip()+
labs(x="State",
y="Number of Medical Centers",
title = "Total Counts of VA Medical Centers by State")
#Show top 6 rows
head(mh2015_puf_Mainland)
